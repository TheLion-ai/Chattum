version: '3'

services:
  backend:
    build: backend/
    ports:
      - 8000:5000
    networks:
      - deploy_network
    volumes:
      - ./backend:/backend
    env_file:
      - .env
    healthcheck:
      test: curl --fail backend:5000/health_check || exit 1
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 10s

  frontend:
    build: frontend/
    depends_on:
      backend:
        condition: service_healthy
    ports:
        - 8501:8501
    networks:
      - deploy_network
    volumes:
      - ./frontend:/frontend
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - deploy_network
    volumes:
      - mongo_storage:/data/db
    profiles:
      - mongo
      - standalone

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
    command: server --console-address ":9001" /data
    networks:
      - deploy_network
    profiles:
      - minio
      - standalone


networks:
  deploy_network:
    driver: bridge

volumes:
  minio_storage: {}
  mongo_storage: {}
